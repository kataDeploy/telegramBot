{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["BACEND_URL","intervalId","App","useState","trackTable","setTrackTable","price","setPrice","parity","setParity","operation","setOperation","onSync","console","log","axios","get","then","res","data","Option","Select","operationMenu","defaultValue","style","width","onChange","value","columns","title","dataIndex","key","render","text","record","color","conditionDone","candleCloseCondition","height","backgroundColor","type","danger","onClick","post","className","display","clearInterval","setInterval","placeholder","e","target","reqParam","dataSource","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.890b9920.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport { Table } from 'antd';\nimport { InputNumber } from \"antd\";\nimport { Input } from \"antd\";\nimport { Select } from \"antd\";\nimport { Button } from \"antd\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst BACEND_URL = 'http://localhost:3001/';\nlet intervalId = -1;\n\nfunction App() {\n  const [trackTable, setTrackTable] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [parity, setParity] = useState(\"usd\");\n  const [operation, setOperation] = useState(\"GREATER\");\n\n\n  \n  const onSync = () => {\n    console.log('sync started...')\n    const path = 'sync';\n    axios.get(BACEND_URL+path).then(res=>{\n      setTrackTable(res.data)\n    })\n \n  }\n  const startTrack = () => {\n    clearInterval(intervalId);\n    axios.get(BACEND_URL+'startBot').then(res=>{\n      console.log(res.data)\n    })\n    intervalId = setInterval(() => {\n      onSync()\n    }, 1000*60*5);\n  }\n  const stopTrack = () => {\n    clearInterval(intervalId);\n    const path = 'stop';\n\n    axios.get(BACEND_URL+path).then(res=>{\n      console.log(res.data)\n    })\n   \n  }\n  const addParity = () => {\n    const path = 'add';\n    const reqParam = {parity,operation,price};\n\n    axios.post(BACEND_URL+path,reqParam).then(res=>{\n      setTrackTable(res.data)\n    })\n  }\n  \n\n  const { Option } = Select;\n  const operationMenu = (\n    <Select\n      defaultValue=\"GREATER\"\n      style={{ width: 120 }}\n      onChange={setOperation}\n    >\n      <Option value=\"GREATER\">GREATER</Option>\n      <Option value=\"LESS\">LESS</Option>\n    </Select>\n  );\n\n  const removeTrack = (key) => {\n    const path = 'remove';\n    console.log(key)\n    axios.post(BACEND_URL+path,{key}).then(res=>{\n      setTrackTable(res.data);\n    })\n  }\n  \n  const columns = [\n    {\n      title: 'Parity',\n      dataIndex: 'parity',\n      key: 'parity',\n    },\n    {\n      title: 'Operation',\n      dataIndex: 'operation',\n      key: 'operation',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date',\n      key: 'date',\n    },\n    {\n      title: 'Condition',\n      dataIndex: 'conditionDone',\n      key: 'conditionDone',\n      render: (text, record) => {\n        let color = 'red';\n        if(record.conditionDone){\n          if(record.candleCloseCondition)\n            color = 'green';\n          else\n            color = 'yellow';\n        }\n        return <div style={{width:'10px',height:'10px',backgroundColor: color}}>\n        </div>\n      }\n    },\n    {\n      \n      dataIndex: 'remove',\n      key: 'remove',\n      render: (text, record) => {\n        return <Button  type=\"primary\" danger onClick={()=> removeTrack(record.key)}> DELETE\n        </Button>\n      }\n    }\n    \n  ]\n\n  return (\n    <div className=\"App\">\n      <div style={{display:'flex'}}>\n      <Button className=\"setupButtons\" type=\"primary\" onClick={onSync}>SYNC</Button>\n      <Button className=\"setupButtons\" type=\"primary\" onClick={startTrack}>Start Track</Button>\n      <Button className=\"setupButtons\" type=\"primary\" onClick={stopTrack}>Stop Track</Button>\n      </div>\n\n      <div className=\"additionBox\">\n      <div className=\"additionMenu\">\n        <h3>Parity</h3>\n        <h3>Operation</h3>\n        <h3>Price</h3>\n        <h3></h3>\n      </div>\n      <div className=\"additionMenu\">\n        <div>\n          <Input placeholder=\"parity\" onChange={(e)=> setParity(e.target.value)}></Input>\n        </div>\n        <div>{operationMenu}</div>\n        <div>\n        <InputNumber\n              onChange={setPrice}\n            />\n        </div>\n        <div>\n        <Button  type=\"primary\" onClick={addParity}>+</Button>\n        </div>\n      </div>\n      </div>\n\n      <div className=\"trackTable\">\n      <Table columns={columns} dataSource={trackTable} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}